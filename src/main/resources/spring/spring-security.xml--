<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-4.1.xsd ">
      <!-- 不受Spring安全控制的资源 -->
		<http pattern="/css/**" security="none" />
		<http pattern="/images/**" security="none" />
		<http pattern="/scripts/**" security="none" />
		<http pattern="/jslib/**" security="none" />
		<http pattern="/login*" security="none" />
		<http pattern="/pages/portal/main.jsp" security="none" />
		<http pattern="/getValidateCode?*" security="none" />
		<http pattern="/checkValidateCode*" security="none" />
		<http pattern="/order/**" security="none" />
		<http pattern="/pages/**" security="none" />
		<http pattern="/**" security="none" />
     <http auto-config="true" use-expressions="false" 
           xmlns="http://www.springframework.org/schema/security" 
           access-decision-manager-ref="accessDecisionManager" 
           entry-point-ref="authenticationEntryPoint" >
        <form-login   
            login-page="/login.jsp"  
            authentication-failure-url="/login.jsp?error"   
            login-processing-url="/login.jsp"  
            always-use-default-target="false"  
            authentication-success-handler-ref="loginLogAuthenticationSuccessHandler" />     
         <!-- 认证成功用自定义类myAuthenticationSuccessHandler处理 -->  
         <logout logout-url="/logout"   
                logout-success-url="/"   
                invalidate-session="true"  
                delete-cookies="JSESSIONID"/> 
        <csrf disabled="true" />
        <!--<intercept-url pattern="/login.**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/admin/login.**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/admin/**" access="ROLE_ADMIN"/>
        <intercept-url pattern="/**" access="ROLE_USER"/>-->
        <custom-filter before="FORM_LOGIN_FILTER" ref="validateCodeAuthenticationFilter"/>
		<!-- 防止重复登陆 -->
		<session-management >
			<concurrency-control session-registry-ref="sessionRegistry" error-if-maximum-exceeded="false" max-sessions="5"  expired-url= "/login.jsp?error=expired" />
		</session-management>
		
        <!--<intercept-url pattern="/**" access="ROLE_USER" />-->
        <!-- 不受Spring安全控制的资源 
		<intercept-url pattern="/css/**" access="none" />
		<intercept-url pattern="/images/**" access="none" />
		<intercept-url pattern="/scripts/**" access="none" />
		<intercept-url pattern="/jslib/**" access="none" />
		<intercept-url pattern="/login.jsp*" access="none" />
		<intercept-url pattern="/services/common/other/savePassword" access="none" />
		<intercept-url pattern="/checkValidateCode*" access="none" />-->
    </http>
      
    <!-- 使用自定义类myUserDetailsService从数据库获取用户信息 -->  
    <authentication-manager>    
        <authentication-provider user-service-ref="userDetailsService">    
            <!-- 加密 -->  
            <password-encoder hash="md5"></password-encoder>  
        </authentication-provider>  
    </authentication-manager>  

	<!-- 验证码处理 -->
	<beans:bean  id="validateCodeAuthenticationFilter" class="com.seller.servlet.ValidateCodeAuthenticationFilter">
	    <beans:property name="sessionRegistry" ref="sessionRegistry"></beans:property>  
	    <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
	    <beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property> 
	    <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>
	<!-- 登录success -->
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  
   		<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property>
	</beans:bean> 
	<!-- 登录error -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler"  
	    class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
	    <beans:property name="defaultFailureUrl" value="/login.jsp?error=validateError"></beans:property>
	</beans:bean> 
	
	<beans:bean id="authenticationEntryPoint"  
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
        <beans:constructor-arg name="loginFormUrl" value="/login.jsp" />  
    </beans:bean>  
	
    <!-- session注册 --> 
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />  

	<!-- 用户信息服务，这里用spring带的服务做测试
	<user-service id="userDetailsService">
		<user name="admin" password="123" authorities="ROLE_USER, ROLE_ADMIN" />
	</user-service> -->
	
	<!-- 用户权限控制 -->
	<authentication-manager alias="authenticationManager">  
    	<authentication-provider ref="authenticationProvider" />  
	</authentication-manager>
  
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
	    <beans:property name="userDetailsService" ref="userDetailsService" />  
	    <beans:property name="hideUserNotFoundExceptions" value="false" />  
	    <beans:property name="passwordEncoder" ref="passwordEncoder"/>  
	</beans:bean>
  
	 <!-- 对密码进行MD5编码 -->  
    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> 
    
    <!-- 用户登录处理 -->
	<beans:bean id="userDetailsService" class="com.seller.security.SysUserDetailsService" />

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">  
	    <beans:constructor-arg name="decisionVoters">  
	        <beans:list>
	            <beans:ref bean="roleVoter"/>  
	            <beans:ref bean="authenticatedVoter"/>  
	        </beans:list>  
	    </beans:constructor-arg>  
	    <beans:property name="messageSource" ref="messageSource"></beans:property>  
	</beans:bean>  
	  
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">  
	    <beans:property name="rolePrefix" value="ROLE_"></beans:property>  
	</beans:bean>  
	  
	<beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />  

<!-- 
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="allowIfAllAbstainDecisions" value="true" />
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.annotation.Jsr250Voter" />
			</beans:list>
		</beans:property>
	</beans:bean> -->
</beans:beans>